name: Check
defaults:
  run:
    shell: bash

on:
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  check:
    name: Check on ${{ matrix.os.runner }}
    runs-on: ${{ matrix.os.runner }}
    defaults:
      run:
        shell: ${{ matrix.os.shell }}
    strategy:
      fail-fast: false
      matrix:
        os:
#          - runner: macos-latest
#            shell: bash
          - runner: ubuntu-latest
            shell: bash
#          - runner: windows-latest
#            shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        if: ${{ runner.os == 'Windows' }}
        with:
          msystem: MINGW64
          path-type: inherit
          update: true
          install: >-
            tar

      - uses: actions/checkout@v2

      - name: Restore native cache
        id: cache-native
        uses: actions/cache@v3.0.1
        with:
          path: |
            scripts/build
          key: ${{ runner.os }}-native-${{ hashFiles('./scripts/*') }}

      - name: Setup native libraries
        run: ./scripts/setup.sh

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v3.0.1
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/yarn
            ~/.gradle/nodejs
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Gradle Check
        run: ./gradlew check --scan

      - name: Gradle Assemble
        run: ./gradlew assemble --scan

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: reports-${{ runner.os }}
          path: |
            **/build/reports
